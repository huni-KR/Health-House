<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.vue.mapper.ReviewMapper">

	<!-- 전체 댓글 댓글 조회 -->
	<select id="list" resultType="reviewDto">
		select review_no, store_no, s.name, u.nickname, writer_email, r.title, r.content  
			from reviews r join sport s join users u 
			on r.store_no=s.no and u.email=r.writer_email
		order by review_no desc
	</select>
	
	<!--  댓글 한개 조회 -->
	<select id="one" resultType="reviewDto">
		select review_no, writer_email, title, content  
			from reviews 
			where review_no=#{no}
	</select>
	
	<!-- 가게당 댓글 조회 -->
	<select id="list1" resultType="reviewDto">
		select review_no, store_no, writer_email, title, content, regtime, nickname, name
		from sport s join reviews r join users u on r.writer_email=u.email and r.store_no=s.no
		where store_no=#{storeno}
		order by regtime desc
	</select>

	<!-- 책 정보 등록 -->
	<insert id="create" parameterType="reviewDto">
		insert into reviews(
			store_no, writer_email, title, content, regtime
		) values (
			#{store_no}, #{writer_email}, #{title}, #{content}, now()
		)
	</insert>
	
	<!-- 책 정보 수정 -->
	<update id="modify" parameterType="reviewDto">
		update reviews
		set title = #{title}, content = #{content}
		where review_no = #{review_no}
	</update>

	<!-- isbn에 따른 책 정보 삭제 -->
	<delete id="delete" parameterType="int">
		delete
		from reviews
		where review_no = #{review_no}
	</delete>

</mapper>

