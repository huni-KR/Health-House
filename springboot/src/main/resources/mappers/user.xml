<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.vue.mapper.UserMapper">

	<!-- 유저 등록 -->
	<insert id="registUser" parameterType="user">
		insert into users(email, pw, username, nickname, token)
		values(#{email},#{pw},#{username},#{nickname}, #{token});
	</insert>
	
	<!-- 유저 중복 확인 -->
	<select id="isNotDuplicated" parameterType="user" resultType="int">
		select count(*)
			from
				(select email from users union select email from deleted_users) a
			where email=#{email};	
	</select>
	
	<!-- SNS 가입 확인 -->
	<select id="loginChk" parameterType="user" resultType="int">
		select count(*)
			from
				(select email from users) a
			where email=#{email};
	</select>
	
	
	<!-- 로그인 id, pw 비교 -->
	<select id="loginUser" parameterType="user" resultType="int">
	select count(*)
		from (
			select *
			from users
			where pw is not null) a
		where email=#{email} and pw=#{pw};
	</select>
	
	<!-- 로그인 id, 토큰 비교 -->
	<select id="loginUserNaver" parameterType="user" resultType="int">
	select count(*)
		from (
			select *
			from users
			where pw is null) a
		where email=#{email} and token=#{token};
	</select>
	
	<!-- 유저 상세 조회 -->
	<select id="selectUserByEmail" resultType="user">
		select email, username, pw, nickname, token
		from users
		where email = #{email};
	</select>
	
	<!-- 유저 수정 -->
	<update id="updateUser" parameterType="user">
		update users
		   set pw = #{pw}, 
		   	   username = #{username},
		   	   nickname=#{nickname}
		 where email = #{email};
	</update>

	<!-- 유저 삭제 -->
	<delete id="deleteUser" parameterType="string">
		delete 
		from users 
		where email = #{email};
	</delete>
	
	
	<!-- 유저 전체 조회 -->
	<select id="showUsers" resultType="user">
		select email, username, nickname
		from users;
	</select>
	
	
	
		
	


</mapper>

