<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.vue.mapper.SportMapper">

	<select id="getSport" parameterType="map"  resultType="sportDto">
		select s.no, s.name, s.category, s.dongCode, s.oldAddress, s.newAddress, s.lat, s.lng
		from sport s join distance d
		on s.no = d.no
		where  d.aptCode = #{aptCode}
		and d.dist <![CDATA[<=]]> #{distance} 
		order by s.no
	</select>
	
	<select id="getGym" parameterType="map"  resultType="sportDto">
		select s.no, s.name, s.category, s.dongCode, s.oldAddress, s.newAddress, s.lat, s.lng
		from sport s join distance d
		on s.no = d.no
		where  d.aptCode = #{aptCode}
		and d.dist <![CDATA[<=]]> #{distance} 
		and s.category like '%헬스%'
		order by s.no
	</select>
	
	<select id="getGolf" parameterType="map"  resultType="sportDto">
		select s.no, s.name, s.category, s.dongCode, s.oldAddress, s.newAddress, s.lat, s.lng
		from sport s join distance d
		on s.no = d.no
		where  d.aptCode = #{aptCode}
		and d.dist <![CDATA[<=]]> #{distance} 
		and s.category like '%골프%'
		order by s.no
	</select>
	
	<select id="getEtc" parameterType="map"  resultType="sportDto">
		select s.no, s.name, s.category, s.dongCode, s.oldAddress, s.newAddress, s.lat, s.lng
		from sport s join distance d
		on s.no = d.no
		where  d.aptCode = #{aptCode}
		and d.dist <![CDATA[<=]]> #{distance} 
		and s.category not like '%헬스%'
		and s.category not like '%골프%'
		order by s.no
	</select>
	
	<select id="getInfo" resultType="sportDto">
		select no, name, category, newAddress from sport where no=#{no};
	</select>
	
	
</mapper>